generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model branches {
  id         Int       @id @default(autoincrement())
  name       String    @db.VarChar(100)
  address    String?   @db.Text
  latitude   Float?    @db.Float
  longitude  Float?    @db.Float
  services   String?   @db.Text
  created_at DateTime? @default(now()) @db.Timestamp(0)
}

model memberships {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(100)
  description String?   @db.Text
  duration    String?   @db.VarChar(50)
  start_date  DateTime? @db.Date
  end_date    DateTime? @db.Date
  price       Float?    @db.Float
  status      Boolean?  @default(true)
  user_id     Int?
  users       users?    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "memberships_ibfk_1")

  @@index([user_id], map: "user_id")
}

model qrs {
  id           Int       @id @default(autoincrement())
  image        String?   @db.Text
  generated_at DateTime? @db.Date
  description  String?   @db.Text
}

model reports {
  id           Int       @id @default(autoincrement())
  type         String?   @db.VarChar(50)
  generated_at DateTime? @db.Date
}

model rfid_access {
  id         Int       @id @default(autoincrement())
  rfid_code  String    @unique(map: "rfid_code") @db.VarChar(100)
  entry_date DateTime? @db.Date
  exit_date  DateTime? @db.Date
  user_id    Int?
  users      users?    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "rfid_access_ibfk_1")

  @@index([user_id], map: "user_id")
}

model users {
  id          Int           @id @default(autoincrement())
  name        String        @db.VarChar(100)
  lastname    String        @db.VarChar(100)
  email       String        @unique(map: "email") @db.VarChar(150)
  password    String        @db.VarChar(255)
  role        users_role
  status      Boolean?      @default(true)
  created_at  DateTime?     @default(now()) @db.Timestamp(0)
  updated_at  DateTime?     @default(now()) @db.Timestamp(0)
  memberships memberships[]
  rfid_access rfid_access[]
}

enum users_role {
  admin
  empleado
  cliente
}
